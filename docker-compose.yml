services:
  content:
    build:
      context: .
      dockerfile: ./apps/content-management/Dockerfile.dev
    volumes:
      - ./apps/content-management:/app/apps/content-management
    environment:
      - NODE_ENV=development
    networks:
      - micro-srv
    restart: unless-stopped

  apisix:
    image: apache/apisix:3.13.0-debian
    restart: always
    volumes:
      - ./apisix_conf/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    environment:
      - APISIX_STAND_ALONE=true
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      - micro-srv

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - micro-srv

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    command: start-dev
    environment:
      KC_HOSTNAME: http://localhost:8080
      KC_HOSTNAME_ADMIN: http://localhost:8080
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - micro-srv

networks:
  micro-srv:
    driver: bridge

volumes:
  postgres_data:
